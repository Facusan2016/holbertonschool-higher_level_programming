The '7-base_geometry' module
==========================

Using 'BaseGeometry class'
-------------------

Here we're testing the integer_validator function.

First we import the function from the module:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()

    >>> bg.integer_validator("my_int", 12)

    >>> bg.integer_validator("width", 12.24)
    Traceback (most recent call last):
        ...
    TypeError: width must be an integer

    >>> bg.integer_validator("width", "Holberton")
    Traceback (most recent call last):
        ...
    TypeError: width must be an integer

    >>> bg.integer_validator("width", None)
    Traceback (most recent call last):
        ...
    TypeError: width must be an integer

    >>> bg.integer_validator("width", float('NaN'))
    Traceback (most recent call last):
        ...
    TypeError: width must be an integer

    >>> bg.integer_validator("width", float('inf'))
    Traceback (most recent call last):
        ...
    TypeError: width must be an integer

    >>> bg.integer_validator("width", -7)
    Traceback (most recent call last):
        ...
    ValueError: width must be greater than 0

    >>> bg.integer_validator("width", -7.8)
    Traceback (most recent call last):
        ...
    TypeError: width must be an integer

    >>> bg.integer_validator()
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> bg.integer_validator("asd")
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'



