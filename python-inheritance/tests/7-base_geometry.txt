The '7-base_geometry' module
==========================

Using 'BaseGeometry class'
-------------------

Here we're testing the integer_validator and area function.

First we import the function from the module:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()

Area testing

    >>> bg.area()
    Traceback (most recent call last):
        ...
    Exception: area() is not implemented

Int

    >>> bg.integer_validator("my_int", 12)

Float

    >>> bg.integer_validator("float", 12.24)
    Traceback (most recent call last):
        ...
    TypeError: float must be an integer

String

    >>> bg.integer_validator("string", "Holberton")
    Traceback (most recent call last):
        ...
    TypeError: string must be an integer

Set

    >>> bg.integer_validator("set", {5, 6})
    Traceback (most recent call last):
        ...
    TypeError: set must be an integer

List

    >>> bg.integer_validator("list", [1, 2])
    Traceback (most recent call last):
        ...
    TypeError: list must be an integer

Tuple

    >>> bg.integer_validator("tuple", (9, ))
    Traceback (most recent call last):
        ...
    TypeError: tuple must be an integer

Zero Value

    >>> bg.integer_validator("zero", 0)
    Traceback (most recent call last):
        ...
    ValueError: zero must be greater than 0

Boolean

    >>> bg.integer_validator("bool", True)
    Traceback (most recent call last):
        ...
    TypeError: bool must be an integer

None

    >>> bg.integer_validator("width", None)
    Traceback (most recent call last):
        ...
    TypeError: width must be an integer

NaN

    >>> bg.integer_validator("width", float('NaN'))
    Traceback (most recent call last):
        ...
    TypeError: width must be an integer

Inf

    >>> bg.integer_validator("width", float('inf'))
    Traceback (most recent call last):
        ...
    TypeError: width must be an integer

Negative

    >>> bg.integer_validator("width", -7)
    Traceback (most recent call last):
        ...
    ValueError: width must be greater than 0

Negative and Float

    >>> bg.integer_validator("width", -7.8)
    Traceback (most recent call last):
        ...
    TypeError: width must be an integer

Without argument

    >>> bg.integer_validator()
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

With an Argument

    >>> bg.integer_validator("asd")
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    



